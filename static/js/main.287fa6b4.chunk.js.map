{"version":3,"sources":["components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","data.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","Player","audioRef","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","getTime","time","Math","floor","slice","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","LibrarySong","songSelectHandler","Library","libraryStatus","chillHop","audio","uuidv4","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","timeUpdateHandler","animation","round","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.287fa6b4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Song = ({currentSong}) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt={currentSong.name}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Song\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlay, faAngleLeft, faAngleRight, faPause} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({ \r\n  audioRef,\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs }) => {\r\n\r\n    //Event Handlers\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active:false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  }\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({...songInfo, currentTime: e.target.value})\r\n  }\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]) //get the next song in the songs array and reset to 0 when the array gets to the end\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === - 1) { //if the index gets negative, set it to the last song in the list\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        if(isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length])\r\n\r\n    }\r\n    if(isPlaying) audioRef.current.play();\r\n\r\n  }\r\n\r\n  \r\n  /* \r\n  A cleaner implementation of the skipTrackHandler:\r\n  function skip(direction) { // -1 or 1\r\n    const currentIndex = songs.findIndex(s => s.id === currentSong.id)\r\n    let newIndex = currentIndex + direction\r\n    \r\n    if (newIndex < 0) {\r\n      newIndex = songs.length - 1\r\n    } else if (newIndex >= songs.length) {\r\n      newIndex = 0\r\n    }\r\n    \r\n    setCurrentSong(songs[newIndex])\r\n  }\r\n  */\r\n \r\n //track animation style\r\n const trackAnim = {\r\n   transform: `translateX(${songInfo.animationPercentage}%)`\r\n }\r\n  //format time values\r\n  const getTime = (time) => {\r\n    return(\r\n      Math.floor(time / 60) + ':' + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})` }}className=\"track\">\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'} </p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler('skip-back')}\r\n          className=\"skip-back\"\r\n          size='2x'\r\n          icon={faAngleLeft}/>\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size='2x'\r\n          icon={isPlaying ? faPause : faPlay}/>\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler('skip-forward')}\r\n          className=\"skip-forward\"\r\n          size='2x'\r\n          icon={faAngleRight}/>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Player\r\n","import React from 'react'\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs}) => {\r\n\r\n  const songSelectHandler = async () => {\r\n    //\r\n    await setCurrentSong(song);\r\n    //Add active State\r\n    //use map() to return a new copy of the song array that contains only one song with active set to true\r\n    //pass that array into the setSongs function, which is setState of the songs data\r\n    const newSongs = songs.map((song) => { \r\n      if(song.id === id){\r\n        return{\r\n          ...song,\r\n          active: true,\r\n        }\r\n      }else{\r\n        return{\r\n          ...song,\r\n          active: false,\r\n        }\r\n      }\r\n    });\r\n    await setSongs(newSongs);\r\n\r\n    if(isPlaying) audioRef.current.play();\r\n  }\r\n\r\n\r\n  return (\r\n    //holy crap this is cool. video 16 about 1:00 minute in\r\n    <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n      <img src={song.cover} alt={song.name}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h3>{song.artist}</h3>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LibrarySong\r\n","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) =>{\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map(song => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n            />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Library\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React from 'react'\r\nimport { FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\r\n  return (\r\n    <nav>\r\n      <h1>Minimalist Player</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React, {useState, useRef} from \"react\";\n//import styles\nimport './styles/app.scss'\n//Import components\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\"\nimport data from './data';\nimport Nav from './components/Nav'\n\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n  //State data\n  const [songs, setSongs] = useState(data()); //this just pulls in the data from data.js\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0, //initial value\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  \n  //state handlers\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculate percentage\n    const roundedCurrent = Math.round(current); //round current time to the nearest second\n    const roundedDuration = Math.round(duration);\n    const animation = (roundedCurrent / roundedDuration * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation\n    });\n  };\n  const songEndHandler = async () => {\n      let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n      if(isPlaying) audioRef.current.play();\n  }\n\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav \n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <Song\n        currentSong={currentSong}/>\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library \n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n        />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}